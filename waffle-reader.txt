#lang racket/base

(define (keep-reading)
  (define f (read))
  (cond
    [(eof-object? f)
     (list)]
    [else
     (cons f (keep-reading))]))

(define (read-file path)
  (with-input-from-file path
    keep-reading
    #:mode 'text))

(module+ main
  (require racket/cmdline
           racket/pretty)

  (define path/string
    (command-line
     #:args (path)
     path))

  (unless (file-exists? path/string)
    (error (format "No such file: \"~a\"." path/string))
    (exit 1))

  (eval (read-file path/string)))
